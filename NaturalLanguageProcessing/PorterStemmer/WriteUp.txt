Task 1:

Implementation of Porter Stemmer algorithm : PorterStemmer_English.py

Task 2:

Take Hindi (or your mother tongue) and suggest how the code that you wrote in point 1 will have to change to work for Hindi. Can it work with the same accuracies, or will there be problems specific to Hindi which don't occur in English? Explain with examples.


Stemming is the process of reducing a word to its stem. In this process, we strip the words suffixes and prefixes to convert it into the word stem. Porter Stemmer is one such algorithm that is used for performing stemming on English language text. 

Porter stemmer is a rule-based stemming algorithm. It uses a sequence of rules for removing suffixes from words to obtain the stem. The stemmed words may have no meaning after the process, but we would want to maximize the number of meaningful words. Thus, suffixes removed have to follow an order for it to give the best result. The base concept is to remove the longest possible suffix from the word earliest, followed by the shorter suffixes. However, this algorithm focuses only on inflectional morphemes; hence, we don't remove prefixes from the word in this algorithm.

According to my view, porter stemmer for the Hindi language would not produce the same accuracies as it is for the English language.

In Hindi language, words are highly modified by the addition of suffixes, and thus it will be difficult to find the root words distinctly.

Points :

1. In the Hindi language, we have the concept of `sandhi` where there is a change in the form of the letters when two words are concatenated. Thus, while stripping the suffixes from the words, we may end up in different word stems, even when the stem of both the words are same.

2. Suffixes in Hindi are not well defined as it is in English. In English language suffixes like 'tion', 'fulness', 'tional', 'ousness' always ( or mostly ) occur as a suffix in words and not as a part of the root word. However, in Hindi, suffixes are not well defined, and the common suffixes also appear as a part of the root word. Thus stripping these suffix changes the meaning of the word.

3. Nouns and verbs in Hindi are also inflected by gender which in combination with other suffixes change the structure of the word thus making it difficult to strip the word to the stem.

4. Suffixes can be added in two ways when they start with a vowel. One, their general form (when it is free or followed by a vowel) and other in `matra` form (when followed by a consonant). Thus we need to handle this case seperately.


Modification :

As a modification to the algorithm what we can do is rather than removing suffixes in multiple steps from the word, we form lists of suffixes  of larger lengths as a combination of smaller ones. After this we remove matching suffix from the word at once to get the stem of the word.

Implemented a simple Hindi stemmer : PorterStemmer_Hindi.py